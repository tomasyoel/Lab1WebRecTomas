name: Construcción y despliegue de una aplicación ASP.NET MVC a Azure

env:
  AZURE_WEBAPP_NAME: upt-awa-148
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '8'
  SONAR_PROJECT: "tomasyoel_Lab1WebRecTomas"
  SONAR_ORG: "tomasyoel"

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configurando .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Restaurar los paquetes
        run: cd src && dotnet restore
        
      - name: Instalar coverlet
        run: dotnet tool install --global coverlet.console
        
      - name: Ejecutar pruebas con coverlet
        run: |
          cd src
          dotnet test --no-restore \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=cobertura \
            /p:CoverletOutput=../TestResults/Coverage/
            
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.7
        with:
          reports: '**/TestResults/Coverage/coverage.cobertura.xml'
          targetdir: coveragereport
          reporttypes: MarkdownSummary;MarkdownAssembliesSummary;MarkdownSummaryGithub
          
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport 
          path: coveragereport 
          
      - name: Publish coverage in build summary
        run: cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY 
        shell: bash
        
      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner
        
      - name: Ejecutar análisis de SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd src
          dotnet sonarscanner begin \
            /k:"${{ env.SONAR_PROJECT }}" \
            /o:"${{ env.SONAR_ORG }}" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.cobertura.reportsPaths="../TestResults/Coverage/coverage.cobertura.xml" \
            /d:sonar.coverage.exclusions="**/Program.cs" \
            /d:sonar.projectBaseDir="." \
            /d:sonar.sources="." \
            /d:sonar.scm.disabled=true
          dotnet build --no-restore
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
      - name: Publicar la aplicación
        run: cd src && dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/publish
        
      - name: Subir artefacto de publicación
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/publish

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Descargar artefacto
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          
      - name: Desplegar a Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          restart: true